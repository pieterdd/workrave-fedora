From e9cf499f0360d03ba32ab66ac4c439877cc9574e Mon Sep 17 00:00:00 2001
From: Rob Caelers <rob.caelers@gmail.com>
Date: Sun, 5 May 2024 21:17:25 +0200
Subject: [PATCH] Detect sleep/suspend on Linux

---
 ui/app/toolkits/gtkmm/CMakeLists.txt  |  1 +
 ui/app/toolkits/gtkmm/LoginSession.cc | 96 +++++++++++++++++++++++++++
 ui/app/toolkits/gtkmm/LoginSession.hh | 49 ++++++++++++++
 3 files changed, 146 insertions(+)
 create mode 100644 ui/app/toolkits/gtkmm/LoginSession.cc
 create mode 100644 ui/app/toolkits/gtkmm/LoginSession.hh

diff --git a/ui/app/toolkits/gtkmm/CMakeLists.txt b/ui/app/toolkits/gtkmm/CMakeLists.txt
index 9f1e21103..549bb85e2 100644
--- a/ui/app/toolkits/gtkmm/CMakeLists.txt
+++ b/ui/app/toolkits/gtkmm/CMakeLists.txt
@@ -8,6 +8,7 @@ target_sources(workrave-toolkit-gtkmm PRIVATE
   ExercisesDialog.cc
   ExercisesPanel.cc
   GnomeSession.cc
+  LoginSession.cc
   GtkUtil.cc
   HeadInfo.cc
   Hig.cc
diff --git a/ui/app/toolkits/gtkmm/LoginSession.cc b/ui/app/toolkits/gtkmm/LoginSession.cc
new file mode 100644
index 000000000..426b7bbbb
--- /dev/null
+++ b/ui/app/toolkits/gtkmm/LoginSession.cc
@@ -0,0 +1,96 @@
+// Copyright (C) 2024 Rob Caelers <robc@krandor.nl>
+// All rights reserved.
+//
+// This program is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// This program is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with this program.  If not, see <http://www.gnu.org/licenses/>.
+//
+
+#ifdef HAVE_CONFIG_H
+#  include "config.h"
+#endif
+
+#include <spdlog/spdlog.h>
+#include <spdlog/fmt/ostr.h>
+
+#include "LoginSession.hh"
+#include "GtkUtil.hh"
+
+#include "debug.hh"
+
+LoginSession::LoginSession(std::shared_ptr<IPluginContext> context)
+  : context(context)
+{
+  TRACE_ENTRY();
+  init();
+}
+
+LoginSession::~LoginSession()
+{
+  TRACE_ENTRY();
+}
+
+void
+LoginSession::init()
+{
+  try
+    {
+      proxy = Gio::DBus::Proxy::create_for_bus_sync(
+#if GLIBMM_CHECK_VERSION(2, 68, 0)
+        Gio::DBus::BusType::SYSTEM,
+#else
+        Gio::DBus::BUS_TYPE_SYSTEM,
+#endif
+        "org.freedesktop.login1",
+        "/org/freedesktop/login1",
+        "org.freedesktop.login1.Manager");
+
+      proxy->signal_signal().connect(sigc::mem_fun(*this, &LoginSession::on_signal));
+    }
+#if GLIBMM_CHECK_VERSION(2, 68, 0)
+  catch (std::exception &e)
+    {
+      std::cerr << e.what() << std::endl;
+    }
+#else
+  catch (const Glib::Exception &e)
+    {
+      spdlog::warn(std::string("Failed to subscribe to events from Login manager") + std::string(e.what()));
+    }
+#endif
+}
+
+void
+LoginSession::on_signal(const Glib::ustring &sender, const Glib::ustring &signal_name, const Glib::VariantContainerBase &params)
+{
+  try
+    {
+      if (signal_name == "PrepareForSleep")
+        {
+          Glib::Variant<bool> start;
+          params.get_child(start);
+          auto core = context->get_core();
+          core->set_powersave(start);
+        }
+    }
+#if GLIBMM_CHECK_VERSION(2, 68, 0)
+  catch (std::exception &e)
+    {
+      std::cerr << e.what() << std::endl;
+    }
+#else
+  catch (const Glib::Exception &e)
+    {
+      spdlog::warn(std::string("Failed to process event from Login Manager:") + std::string(e.what()));
+    }
+#endif
+}
diff --git a/ui/app/toolkits/gtkmm/LoginSession.hh b/ui/app/toolkits/gtkmm/LoginSession.hh
new file mode 100644
index 000000000..8550aca74
--- /dev/null
+++ b/ui/app/toolkits/gtkmm/LoginSession.hh
@@ -0,0 +1,49 @@
+// Copyright (C) 2024 Rob Caelers <robc@krandor.nl>
+// All rights reserved.
+//
+// This program is free software: you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation, either version 3 of the License, or
+// (at your option) any later version.
+//
+// This program is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with this program.  If not, see <http://www.gnu.org/licenses/>.
+//
+
+#ifndef WORKRAVE_UI_LOGIN_SESSION_HH
+#define WORKRAVE_UI_LOGIN_SESSION_HH
+
+#include <memory>
+
+#include <giomm.h>
+
+#include "ui/Plugin.hh"
+
+class LoginSession : public Plugin<LoginSession>
+{
+public:
+  using Ptr = std::shared_ptr<LoginSession>;
+
+  explicit LoginSession(std::shared_ptr<IPluginContext> context);
+  ~LoginSession() override;
+  void init();
+
+  std::string get_plugin_id() const override
+  {
+    return "workrave.LoginSession";
+  }
+
+private:
+  void on_signal(const Glib::ustring &sender, const Glib::ustring &signal_name, const Glib::VariantContainerBase &params);
+
+private:
+  std::shared_ptr<IPluginContext> context;
+  Glib::RefPtr<Gio::DBus::Proxy> proxy;
+};
+
+#endif // WORKRAVE_UI_LOGIN_SESSION_HH
